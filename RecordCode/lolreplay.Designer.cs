//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("lolreplayModel", "FK_GameDetail_platformDetail", "platformDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecordCode.platformDetail), "GameDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecordCode.GameDetail), true)]
[assembly: EdmRelationshipAttribute("lolreplayModel", "FK_participantsDetail_GameDetail", "GameDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RecordCode.GameDetail), "participantsDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecordCode.participantsDetail), true)]
[assembly: EdmRelationshipAttribute("lolreplayModel", "FK_Player_Server", "platformDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RecordCode.platformDetail), "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RecordCode.Player), true)]

#endregion

namespace RecordCode
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class lolreplayEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“lolreplayEntities”部分中的连接字符串初始化新 lolreplayEntities 对象。
        /// </summary>
        public lolreplayEntities() : base("name=lolreplayEntities", "lolreplayEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 lolreplayEntities 对象。
        /// </summary>
        public lolreplayEntities(string connectionString) : base(connectionString, "lolreplayEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 lolreplayEntities 对象。
        /// </summary>
        public lolreplayEntities(EntityConnection connection) : base(connection, "lolreplayEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GameDetail> GameDetail
        {
            get
            {
                if ((_GameDetail == null))
                {
                    _GameDetail = base.CreateObjectSet<GameDetail>("GameDetail");
                }
                return _GameDetail;
            }
        }
        private ObjectSet<GameDetail> _GameDetail;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<participantsDetail> participantsDetail
        {
            get
            {
                if ((_participantsDetail == null))
                {
                    _participantsDetail = base.CreateObjectSet<participantsDetail>("participantsDetail");
                }
                return _participantsDetail;
            }
        }
        private ObjectSet<participantsDetail> _participantsDetail;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<platformDetail> platformDetail
        {
            get
            {
                if ((_platformDetail == null))
                {
                    _platformDetail = base.CreateObjectSet<platformDetail>("platformDetail");
                }
                return _platformDetail;
            }
        }
        private ObjectSet<platformDetail> _platformDetail;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Player> Player
        {
            get
            {
                if ((_Player == null))
                {
                    _Player = base.CreateObjectSet<Player>("Player");
                }
                return _Player;
            }
        }
        private ObjectSet<Player> _Player;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 GameDetail EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGameDetail(GameDetail gameDetail)
        {
            base.AddObject("GameDetail", gameDetail);
        }
    
        /// <summary>
        /// 用于向 participantsDetail EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToparticipantsDetail(participantsDetail participantsDetail)
        {
            base.AddObject("participantsDetail", participantsDetail);
        }
    
        /// <summary>
        /// 用于向 platformDetail EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToplatformDetail(platformDetail platformDetail)
        {
            base.AddObject("platformDetail", platformDetail);
        }
    
        /// <summary>
        /// 用于向 Player EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPlayer(Player player)
        {
            base.AddObject("Player", player);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lolreplayModel", Name="GameDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameDetail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GameDetail 对象。
        /// </summary>
        /// <param name="gameId">gameId 属性的初始值。</param>
        public static GameDetail CreateGameDetail(global::System.Int32 gameId)
        {
            GameDetail gameDetail = new GameDetail();
            gameDetail.gameId = gameId;
            return gameDetail;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 gameId
        {
            get
            {
                return _gameId;
            }
            set
            {
                if (_gameId != value)
                {
                    OngameIdChanging(value);
                    ReportPropertyChanging("gameId");
                    _gameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("gameId");
                    OngameIdChanged();
                }
            }
        }
        private global::System.Int32 _gameId;
        partial void OngameIdChanging(global::System.Int32 value);
        partial void OngameIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> mapId
        {
            get
            {
                return _mapId;
            }
            set
            {
                OnmapIdChanging(value);
                ReportPropertyChanging("mapId");
                _mapId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mapId");
                OnmapIdChanged();
            }
        }
        private Nullable<global::System.Int32> _mapId;
        partial void OnmapIdChanging(Nullable<global::System.Int32> value);
        partial void OnmapIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gameMode
        {
            get
            {
                return _gameMode;
            }
            set
            {
                OngameModeChanging(value);
                ReportPropertyChanging("gameMode");
                _gameMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gameMode");
                OngameModeChanged();
            }
        }
        private global::System.String _gameMode;
        partial void OngameModeChanging(global::System.String value);
        partial void OngameModeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gameType
        {
            get
            {
                return _gameType;
            }
            set
            {
                OngameTypeChanging(value);
                ReportPropertyChanging("gameType");
                _gameType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("gameType");
                OngameTypeChanged();
            }
        }
        private global::System.String _gameType;
        partial void OngameTypeChanging(global::System.String value);
        partial void OngameTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> gameQueueConfigId
        {
            get
            {
                return _gameQueueConfigId;
            }
            set
            {
                OngameQueueConfigIdChanging(value);
                ReportPropertyChanging("gameQueueConfigId");
                _gameQueueConfigId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gameQueueConfigId");
                OngameQueueConfigIdChanged();
            }
        }
        private Nullable<global::System.Int32> _gameQueueConfigId;
        partial void OngameQueueConfigIdChanging(Nullable<global::System.Int32> value);
        partial void OngameQueueConfigIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> gameTypeConfigId
        {
            get
            {
                return _gameTypeConfigId;
            }
            set
            {
                OngameTypeConfigIdChanging(value);
                ReportPropertyChanging("gameTypeConfigId");
                _gameTypeConfigId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gameTypeConfigId");
                OngameTypeConfigIdChanged();
            }
        }
        private Nullable<global::System.Int32> _gameTypeConfigId;
        partial void OngameTypeConfigIdChanging(Nullable<global::System.Int32> value);
        partial void OngameTypeConfigIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> gameStartTime
        {
            get
            {
                return _gameStartTime;
            }
            set
            {
                OngameStartTimeChanging(value);
                ReportPropertyChanging("gameStartTime");
                _gameStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gameStartTime");
                OngameStartTimeChanged();
            }
        }
        private Nullable<global::System.Int64> _gameStartTime;
        partial void OngameStartTimeChanging(Nullable<global::System.Int64> value);
        partial void OngameStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> gameLength
        {
            get
            {
                return _gameLength;
            }
            set
            {
                OngameLengthChanging(value);
                ReportPropertyChanging("gameLength");
                _gameLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gameLength");
                OngameLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _gameLength;
        partial void OngameLengthChanging(Nullable<global::System.Int32> value);
        partial void OngameLengthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String observers
        {
            get
            {
                return _observers;
            }
            set
            {
                OnobserversChanging(value);
                ReportPropertyChanging("observers");
                _observers = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("observers");
                OnobserversChanged();
            }
        }
        private global::System.String _observers;
        partial void OnobserversChanging(global::System.String value);
        partial void OnobserversChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String platformId
        {
            get
            {
                return _platformId;
            }
            set
            {
                OnplatformIdChanging(value);
                ReportPropertyChanging("platformId");
                _platformId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("platformId");
                OnplatformIdChanged();
            }
        }
        private global::System.String _platformId;
        partial void OnplatformIdChanging(global::System.String value);
        partial void OnplatformIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String server1IP
        {
            get
            {
                return _server1IP;
            }
            set
            {
                Onserver1IPChanging(value);
                ReportPropertyChanging("server1IP");
                _server1IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("server1IP");
                Onserver1IPChanged();
            }
        }
        private global::System.String _server1IP;
        partial void Onserver1IPChanging(global::System.String value);
        partial void Onserver1IPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String server2IP
        {
            get
            {
                return _server2IP;
            }
            set
            {
                Onserver2IPChanging(value);
                ReportPropertyChanging("server2IP");
                _server2IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("server2IP");
                Onserver2IPChanged();
            }
        }
        private global::System.String _server2IP;
        partial void Onserver2IPChanging(global::System.String value);
        partial void Onserver2IPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String server3IP
        {
            get
            {
                return _server3IP;
            }
            set
            {
                Onserver3IPChanging(value);
                ReportPropertyChanging("server3IP");
                _server3IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("server3IP");
                Onserver3IPChanged();
            }
        }
        private global::System.String _server3IP;
        partial void Onserver3IPChanging(global::System.String value);
        partial void Onserver3IPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _createtime;
        partial void OncreatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OncreatetimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lolreplayModel", "FK_GameDetail_platformDetail", "platformDetail")]
        public platformDetail platformDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platformDetail>("lolreplayModel.FK_GameDetail_platformDetail", "platformDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platformDetail>("lolreplayModel.FK_GameDetail_platformDetail", "platformDetail").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<platformDetail> platformDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platformDetail>("lolreplayModel.FK_GameDetail_platformDetail", "platformDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<platformDetail>("lolreplayModel.FK_GameDetail_platformDetail", "platformDetail", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lolreplayModel", "FK_participantsDetail_GameDetail", "participantsDetail")]
        public EntityCollection<participantsDetail> participantsDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<participantsDetail>("lolreplayModel.FK_participantsDetail_GameDetail", "participantsDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<participantsDetail>("lolreplayModel.FK_participantsDetail_GameDetail", "participantsDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lolreplayModel", Name="participantsDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class participantsDetail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 participantsDetail 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static participantsDetail CreateparticipantsDetail(global::System.Guid id)
        {
            participantsDetail participantsDetail = new participantsDetail();
            participantsDetail.ID = id;
            return participantsDetail;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> teamId
        {
            get
            {
                return _teamId;
            }
            set
            {
                OnteamIdChanging(value);
                ReportPropertyChanging("teamId");
                _teamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamId");
                OnteamIdChanged();
            }
        }
        private Nullable<global::System.Int32> _teamId;
        partial void OnteamIdChanging(Nullable<global::System.Int32> value);
        partial void OnteamIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> spell1Id
        {
            get
            {
                return _spell1Id;
            }
            set
            {
                Onspell1IdChanging(value);
                ReportPropertyChanging("spell1Id");
                _spell1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("spell1Id");
                Onspell1IdChanged();
            }
        }
        private Nullable<global::System.Int32> _spell1Id;
        partial void Onspell1IdChanging(Nullable<global::System.Int32> value);
        partial void Onspell1IdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> spell2Id
        {
            get
            {
                return _spell2Id;
            }
            set
            {
                Onspell2IdChanging(value);
                ReportPropertyChanging("spell2Id");
                _spell2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("spell2Id");
                Onspell2IdChanged();
            }
        }
        private Nullable<global::System.Int32> _spell2Id;
        partial void Onspell2IdChanging(Nullable<global::System.Int32> value);
        partial void Onspell2IdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> championId
        {
            get
            {
                return _championId;
            }
            set
            {
                OnchampionIdChanging(value);
                ReportPropertyChanging("championId");
                _championId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("championId");
                OnchampionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _championId;
        partial void OnchampionIdChanging(Nullable<global::System.Int32> value);
        partial void OnchampionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> skinIndex
        {
            get
            {
                return _skinIndex;
            }
            set
            {
                OnskinIndexChanging(value);
                ReportPropertyChanging("skinIndex");
                _skinIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("skinIndex");
                OnskinIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _skinIndex;
        partial void OnskinIndexChanging(Nullable<global::System.Int32> value);
        partial void OnskinIndexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> profileIconId
        {
            get
            {
                return _profileIconId;
            }
            set
            {
                OnprofileIconIdChanging(value);
                ReportPropertyChanging("profileIconId");
                _profileIconId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("profileIconId");
                OnprofileIconIdChanged();
            }
        }
        private Nullable<global::System.Int32> _profileIconId;
        partial void OnprofileIconIdChanging(Nullable<global::System.Int32> value);
        partial void OnprofileIconIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String summonerName
        {
            get
            {
                return _summonerName;
            }
            set
            {
                OnsummonerNameChanging(value);
                ReportPropertyChanging("summonerName");
                _summonerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("summonerName");
                OnsummonerNameChanged();
            }
        }
        private global::System.String _summonerName;
        partial void OnsummonerNameChanging(global::System.String value);
        partial void OnsummonerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> bot
        {
            get
            {
                return _bot;
            }
            set
            {
                OnbotChanging(value);
                ReportPropertyChanging("bot");
                _bot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bot");
                OnbotChanged();
            }
        }
        private Nullable<global::System.Boolean> _bot;
        partial void OnbotChanging(Nullable<global::System.Boolean> value);
        partial void OnbotChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> teamParticipantId
        {
            get
            {
                return _teamParticipantId;
            }
            set
            {
                OnteamParticipantIdChanging(value);
                ReportPropertyChanging("teamParticipantId");
                _teamParticipantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("teamParticipantId");
                OnteamParticipantIdChanged();
            }
        }
        private Nullable<global::System.Int64> _teamParticipantId;
        partial void OnteamParticipantIdChanging(Nullable<global::System.Int64> value);
        partial void OnteamParticipantIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> gameId
        {
            get
            {
                return _gameId;
            }
            set
            {
                OngameIdChanging(value);
                ReportPropertyChanging("gameId");
                _gameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gameId");
                OngameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _gameId;
        partial void OngameIdChanging(Nullable<global::System.Int32> value);
        partial void OngameIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _createtime;
        partial void OncreatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OncreatetimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lolreplayModel", "FK_participantsDetail_GameDetail", "GameDetail")]
        public GameDetail GameDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDetail>("lolreplayModel.FK_participantsDetail_GameDetail", "GameDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDetail>("lolreplayModel.FK_participantsDetail_GameDetail", "GameDetail").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameDetail> GameDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDetail>("lolreplayModel.FK_participantsDetail_GameDetail", "GameDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameDetail>("lolreplayModel.FK_participantsDetail_GameDetail", "GameDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lolreplayModel", Name="platformDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class platformDetail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 platformDetail 对象。
        /// </summary>
        /// <param name="platformId">platformId 属性的初始值。</param>
        public static platformDetail CreateplatformDetail(global::System.String platformId)
        {
            platformDetail platformDetail = new platformDetail();
            platformDetail.platformId = platformId;
            return platformDetail;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String platformId
        {
            get
            {
                return _platformId;
            }
            set
            {
                if (_platformId != value)
                {
                    OnplatformIdChanging(value);
                    ReportPropertyChanging("platformId");
                    _platformId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("platformId");
                    OnplatformIdChanged();
                }
            }
        }
        private global::System.String _platformId;
        partial void OnplatformIdChanging(global::System.String value);
        partial void OnplatformIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastOPTime
        {
            get
            {
                return _LastOPTime;
            }
            set
            {
                OnLastOPTimeChanging(value);
                ReportPropertyChanging("LastOPTime");
                _LastOPTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastOPTime");
                OnLastOPTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastOPTime;
        partial void OnLastOPTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastOPTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String platName
        {
            get
            {
                return _platName;
            }
            set
            {
                OnplatNameChanging(value);
                ReportPropertyChanging("platName");
                _platName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("platName");
                OnplatNameChanged();
            }
        }
        private global::System.String _platName;
        partial void OnplatNameChanging(global::System.String value);
        partial void OnplatNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> valid
        {
            get
            {
                return _valid;
            }
            set
            {
                OnvalidChanging(value);
                ReportPropertyChanging("valid");
                _valid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("valid");
                OnvalidChanged();
            }
        }
        private Nullable<global::System.Boolean> _valid;
        partial void OnvalidChanging(Nullable<global::System.Boolean> value);
        partial void OnvalidChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lolreplayModel", "FK_GameDetail_platformDetail", "GameDetail")]
        public EntityCollection<GameDetail> GameDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameDetail>("lolreplayModel.FK_GameDetail_platformDetail", "GameDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameDetail>("lolreplayModel.FK_GameDetail_platformDetail", "GameDetail", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lolreplayModel", "FK_Player_Server", "Player")]
        public EntityCollection<Player> Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Player>("lolreplayModel.FK_Player_Server", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Player>("lolreplayModel.FK_Player_Server", "Player", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="lolreplayModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Player 对象。
        /// </summary>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="platformid">platformid 属性的初始值。</param>
        public static Player CreatePlayer(global::System.String name, global::System.String platformid)
        {
            Player player = new Player();
            player.Name = name;
            player.platformid = platformid;
            return player;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nick
        {
            get
            {
                return _Nick;
            }
            set
            {
                OnNickChanging(value);
                ReportPropertyChanging("Nick");
                _Nick = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nick");
                OnNickChanged();
            }
        }
        private global::System.String _Nick;
        partial void OnNickChanging(global::System.String value);
        partial void OnNickChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Team
        {
            get
            {
                return _Team;
            }
            set
            {
                OnTeamChanging(value);
                ReportPropertyChanging("Team");
                _Team = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Team");
                OnTeamChanged();
            }
        }
        private global::System.String _Team;
        partial void OnTeamChanging(global::System.String value);
        partial void OnTeamChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String platformid
        {
            get
            {
                return _platformid;
            }
            set
            {
                if (_platformid != value)
                {
                    OnplatformidChanging(value);
                    ReportPropertyChanging("platformid");
                    _platformid = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("platformid");
                    OnplatformidChanged();
                }
            }
        }
        private global::System.String _platformid;
        partial void OnplatformidChanging(global::System.String value);
        partial void OnplatformidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> click
        {
            get
            {
                return _click;
            }
            set
            {
                OnclickChanging(value);
                ReportPropertyChanging("click");
                _click = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("click");
                OnclickChanged();
            }
        }
        private Nullable<global::System.Int64> _click;
        partial void OnclickChanging(Nullable<global::System.Int64> value);
        partial void OnclickChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DWServerName
        {
            get
            {
                return _DWServerName;
            }
            set
            {
                OnDWServerNameChanging(value);
                ReportPropertyChanging("DWServerName");
                _DWServerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DWServerName");
                OnDWServerNameChanged();
            }
        }
        private global::System.String _DWServerName;
        partial void OnDWServerNameChanging(global::System.String value);
        partial void OnDWServerNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("lolreplayModel", "FK_Player_Server", "platformDetail")]
        public platformDetail platformDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platformDetail>("lolreplayModel.FK_Player_Server", "platformDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platformDetail>("lolreplayModel.FK_Player_Server", "platformDetail").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<platformDetail> platformDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platformDetail>("lolreplayModel.FK_Player_Server", "platformDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<platformDetail>("lolreplayModel.FK_Player_Server", "platformDetail", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
